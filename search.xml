<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo + Next主题 + GitHub搭建博客]]></title>
    <url>%2F2018%2F12%2F12%2FHexo%20%2B%20GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[背景原来自己开发了一个博客，当时也是为了学习技术，了解实现原理，采用node.js+mysql+js，效果真是不堪入目，也有后台管理，功能基本已经实现，但实在不堪入目，写着写着就没什么动力去搞了，无意中了解发现Hexo框架，比worldpress还优雅，是时候该折腾折腾，嗯，说好直接开工，前前后后折腾了差不多一周，白天上班晚上倒腾；虽然教程步骤，网上都有，Hexo，next官方文档写的也是挺详细的，写一个出来加深印象。 需求点Hexo框架实现功能 导航栏：首页，分类，标签，归档，关于我，搜索 标题 分页 markdown写作 第三方实现功能 评论 目录列表 留言数统计 访客人数 字数统计 阅读时长 发表时间 阅读量统计 准备工作之前就已经安装过了node.js，Git和npm，一般我用nvm来管理不同的node.js和npm版本，用终端检查一下他们是否在本机成功安装：12git --versiongit version 2.20.0 12node -vv8.11.3 为了稳妥起见，我用的版本当前比较稳定的版本，有时候最新版可能不一定是最好的。 安装Hexo装好node.js和git之后，可以通过npm来安装。1npm i -g hexo-cli 不出什么问题几分钟之后就装好了 建立网站文件夹在本地的电脑新建立文件夹，算是网站的全部内容，在终端输入hexo的相关命令来初始化该文件夹123hexo init ewan_zheng # ewan_zheng是自己的文件名cd ewan_zhengnpm i 初始化完成之后，基本的hexo框架算是搞定了。 网站结构123456├── config.yml├── package.json├── scaffolds├── source├ ├── _posts└── themes config.yml配置文件，以yml为主，博客名称、关键词、作者、系统语言、主题、常用第三方插件等都在里面 package.json包文件，从官方库里安装包插件内容和对应版本会列在里面，基本可以不修改此文件。 scaffolds脚手架，三种形式的模板，添加一些自定义标签或者类的内容。 source放置博客内容地方，默认只有_post(文章)，后续根据自己需求可以添加自定义文件夹，如Tags，categories，about等 themes主题，Hexo会根据这个文件夹生成静态页面。初始状态下只有landscape一个文件夹，即默认主题，后续添加next主题，或者其他自己喜欢主题。 Hexo常用命令新建初始文件1Hexo init 新建文章页面，还有一种是添加草稿，个人认为草稿的意义不大，在本地直接post就是草稿了，编辑完了直接部署上传1hexo new post "title" 生成静态页面12hexo generatehexo g # 简写 部署12hexo deployhexo -d # 简写 启动服务器，默认地址为http://localhost:40001234hexo serverhexo s # 简写 hexo s -p 5000 # 更换一表5000的端口hexo s --w # 启动服务器并且监控状态，有修改就会变化 以上就是用的最多的命令，其他的基本用不着，搭建完成之后，在localhost:4000就能看到内容 设置语言在config.yml找到language:属性，默认不写是英文，改成language: zh-Hans front matter这个可以理解为每篇文章的默认配置12345678---title: Hexo + Next主题 + GitHub搭建博客abbrlink: 16107tags: - Hexo框架- githubcategories: 技术--- 注意，刚开始是没有tags, categories的，首先需要建立相关的文件夹12hexo new page categorieshexo new page tags 能在source文件夹中新建立文件夹categories, tags并且生成的index.md，并在front matter加上type: &quot;categories&quot;, type: &quot;tags&quot;注，标签有两种写法，一种是写成-短划线形式12345678---title: Hexo + Next主题 + GitHub搭建博客abbrlink: 16107tags: - Hexo框架- githubcategories: 技术--- 一种是写成数组形式123456---title: Hexo + Next主题 + GitHub搭建博客abbrlink: 16107tags: [Hexo框架, github]categories: 技术--- 123456---title: 分类date: 2018-12-14 22:08:47type: 'categories'comments: false--- 这里如果添加了comments: false，在该页面不能评论，至于评论功能稍后再说。给模板添加categories，tages在scarffolds文件夹里的post.md文件，在font matter加上categories，tages，这样新创立的文件都会带有这个属性，只要在post文件写分类就会自动带有分类。123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories:--- 部署一篇文章写完之后，部署域名到互联网，这里部署到GitHub仓库，当然也可以部署到自己创建的域名。下载git部署依赖包，终端进入站点目录文件下输入1npm i hexo-deployer-git --save 注册GitHub账号1.首先注册一个账号，并且建立一个仓库。2.这里要特别注意，Repository name的名字一定要和Username，即owner名字一样，否则，后期怎么部署都会失败。3.建立好仓库之后，打开刚新建的hexo文件config.yml，搜索找到部署选项，布置一下路径1234deploy: type: git repo: git@github.com:EwanPM/EwanPM.github.io.git branch: master 这里注意两点： 属性与描述之间要有空格，即冒号后面加空格。 git要关联自己的GitHub库，要配置SSH参数，不然这个功能无法生效。 Git关联远程仓库这里以mac系统操作1.创建SSH，在终端输入1cd ~/.ssh 如果出现-bash: cd: ~/.ssh: No such file or directory说明之前没有用过，继续输入命令1ssh-keygen -t rsa -C ewanzheng2012@gmail.com # 这里填入自己注册github的邮箱名字 中途会出现，Overwrite(Y/N)，输入y，表示之前有生成过ssh，新生成的需要覆盖吗，最后出现下面的状况就表示生成成功了确认完毕之后，生成一对秘钥放在文件夹: /users/ewan/.ssh/，有两个文件一个私钥(id_rsa)、一个公钥(id_rsa.pub)，私钥保存在本机电脑上，公钥放在服务器上。服务器的公钥和本地私钥匹配才能访问服务器的代码库，一定要妥善保管私钥，一旦私钥外泄，服务员上的代码也被泄露。(有点区块链的意思) 在Github上关联自己公钥打开finder，shift+command+G，输入/Users/ewan/.ssh/id_rsa进入ssh目录，用记事本打开id_rsa.pub，复制里面的代码登陆Github，找到setting，在SSH and GPG keys导航里，点击New SSH key，粘贴刚才的代码检测是否关联成功，终端输入1ssh -T git@github.com 出现上面结果表明已关联成功最后使用hexo g &amp;&amp; hexo -d就能能将内容推送到github上了，在github上也能看见自己内容，现在算是完成基本功能了。 nexT主题hexo上有很多主题，感谢各路大神开源自己代码，看来看去最终还是选择nexT，优雅，简约，功能挺全的。 安装可以去nexT官网文档去下载，我是直接下的source，解压之后修改文件名为next放在themes目录下。 设置主题打开hexo目录的config.yml找到theme修改主题为next1theme: next 配置next主题进入刚才的next文件夹，找到config.yml，后面有关配置next主题基本都在这个文件修改官方文档有介绍很多功能，默认状态下config.yml很多功能基本注释掉的，根据自己需求，取消注释并补全信息即可。 主题风格打开配置文件config.yml，搜索关键字scheme，将需启动的scheme前面注释取消即可，这里有4种主题，每次只能打开一种，个人比较喜欢mist，muse的简约版本，整洁优雅，其它的效果可以尝试。 评论自己尝试了评论Disqus,changyan, 多说, 来必力感觉都不好使，多说，畅言已经停止更新，这里用Valine，再次验证了那句话，高手在民间，画面简洁，简洁到没有后台，删除和管理评论直接操作数据库。到LeanCloud创建一个开发版(目前免费)。注册好之后进入，新应用名称-&gt;开发版-&gt;创建即可点击储存-&gt;创建Class，弹出创建Class对话框，Class名称要写Comment，ACL权限更改为无限制。设置-&gt;安全中心-&gt;服务开关，打开数据存储，其它的都可以关掉，我试了短信服务和推送服务暂时都失效的。设置-&gt;安全中心-&gt;安全域名添加，每行一个域名，多个域名换行，要注意格式。设置-&gt;应用key最重要的一步了，复制这里的app ID和App Key在next主题配置文件里，搜索valine，把刚才的appid和appkey复制到对应的属性，enable: true运行hexo s看看效果最后是关于邮件提醒，官方文档有介绍，具体操作如下 1234567你在&#123;&#123;appname&#125;&#125; 的评论收到了新的回复&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;&lt;p&gt;你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：&lt;/p&gt;&lt;p&gt;&lt;a href="https://ewanpm.github.io/" style="display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;"&gt;马上查看&lt;/a&gt;&lt;/p&gt; 回复功能算是完毕了，留言数统计也会显示在副标题的描述中。 文章阅读量统计数据刚刚在LeanCloud建立了新帐之后，创建Class，弹出对话框，Class名称要写Counter，ACL权限更改为无限制，完成之后，左边会多出Counter栏目，在主题配置文件，config.yml搜索leancloud_visitors，填入刚才的AppID及AppKey，enable: true，hexo s重新生成刚部署Hexo，就能看到文章阅读量统计了 记录文章访问量的唯一标识符是文章的发布日期以及文章的标题，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计。 –Doublemine上面的这些文章还介绍了一些刷访问量的目的，这里就不多介绍了。 添加搜索功能这里安装algolia，去官网注册，我选择github登录，有14天使用所有功能，若未续费则自动降级为免费用户，每个月只能有100,000次请求API。安装npm install hexo-algolia包1npm install hexo-algolia --save # 这里安装的版本为，1.3.0 获取API keys登录后新建一个index name，后面会用得到之后选择API keys-&gt;YOUR API KEYS，记录复制Application ID, Search-Only API Key, Admin API Key前往站点配置文件，打开config.yml添加以下代码12345# Algolia Search API Keyalgolia: applicationID: 'Application ID' apiKey: 'Search-Only API Key' indexName: '输入刚才创建index name' 修改Algolia搜索ACL(访问控制列表)和之前在leancloud一样，创建新的class需要把权根改为无限制，打开ALL API KEYS添加上面的选项，然后保存。操作完成之后在终端输入以下命令123export HEXO_ALGOLIA_INDEXING_KEY=Search-Only API key #(windows为set) (Powershell 用 $env:) export HEXO_ALGOLIA_INDEXING_KEY #查看是否设置成功如果没有值就设置失败 #(Mac和git bash 为 export) (Powershell 用 $env:) hexo algolia 前往主题配置文件，搜索找到Algolia Search，修改以下代码123456789# Algolia Searchalgolia_search: enable: true hits: per_page: 10 labels: input_placeholder: 请搜索关键字 hits_empty: "没有找到结果: $&#123;query&#125;" hits_stats: "找到$&#123;hits&#125;条结果(用时$&#123;time&#125;ms)" hexo s刷新看看， 站点总访问量站点总访问量是用不蒜子来统计的，近期的官方文档的域名过期了，js的引用可能有问题，接下来找到文件路径/theme/next/layout/_third-party/analytics/busuanzi-counter.swig，找到域名并替换为1&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt; 然后就妥妥地能正常运行了参考https://valine.js.org/visitor.htmlhttps://ioliu.cn/2017/add-valine-comments-to-your-blog/https://hexo.io/docs/http://theme-next.iissnan.com/getting-started.htmlhttps://www.jianshu.com/p/21c94eb7bcd1]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo框架</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
